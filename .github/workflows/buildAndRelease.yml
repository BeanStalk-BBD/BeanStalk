name: Build and Release - CD

on:
  push:

env:
  AWS_REGION: "eu-west-1"
  AWS_IAM_ROLE_ARN: ${{ secrets.AWS_IAM_ROLE_ARN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_AMI_XXX: ${{ secrets.AWS_AMI_XXX }}                       # Unimplemented
  AWS_SG_XXX: ${{ secrets.AWS_SG_XXX }}                         # Unimplemented
  AWS_SUBNET_XXX: ${{ secrets.AWS_SUBNET_XXX }}                 # Unimplemented

  TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  FW_HOST: ${{ secrets.DB_SERVER_HOST_NAME }}
  FW_NAME: ${{ secrets.DB_NAME }}
  FW_USER: ${{ secrets.DB_USERNAME }}
  FW_PASS: ${{ secrets.DB_PASSWORD }}

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'oracle'

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      

    - name: Get upload URL
      id: upload-url
      run: |
        echo "::set-output name=upload_url::$(curl -s -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }} | jq -r '.upload_url')"
      shell: bash

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.upload-url.outputs.upload_url }}
        asset_path: ./target/your-executable.jar
        asset_name: your-executable.jar
        asset_content_type: application/java-archive